{"version":3,"sources":["ContactForm/ContactForm.module.css","Filter/Filter.module.css","App.module.css","ContactList/ContactList.module.css","ContactForm/ContactForm.js","Filter/Filter.js","ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleSubmit","evt","preventDefault","console","log","validateData","reset","contacts","props","normalizedFilter","toLowerCase","msg","find","contact","alert","onAddContact","handleNameChange","target","value","setState","this","onSubmit","className","s","form","label","input","type","placeholder","onChange","button","Component","Filter","ContactList","onClick","filteredContacts","onGetVisibleContacts","map","filteredContact","index","id","App","filter","prevState","uuidv4","onFilter","getVisibleContacts","includes","deleteContact","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a193cd3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1pFvD\",\"label\":\"ContactForm_label__2WaQT\",\"input\":\"ContactForm_input__2p37J\",\"button\":\"ContactForm_button__22FlG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Filter_button__2lENP\",\"input\":\"Filter_input__3L0Wh\",\"label\":\"Filter_label__2MIE3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Pkd2\",\"App-logo\":\"App_App-logo__2CG4S\",\"App-header\":\"App_App-header__2DNq_\",\"App-link\":\"App_App-link__14ROs\",\"container\":\"App_container__2zubT\",\"App-logo-spin\":\"App_App-logo-spin__3xi8K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__2mJpr\"};","import PropTypes from 'prop-types';\nimport { Component } from 'react';\n\nimport s from './ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    console.log(this.state);\n    console.log(evt);\n    // this.props.onAddContact(this.state);\n    this.validateData();\n\n    this.reset();\n  };\n\n  validateData = () => {\n    const { name, number } = this.state;\n    const { contacts } = this.props;\n    const normalizedFilter = name.toLowerCase();\n    const msg = contacts.find(\n      contact => contact.name.toLowerCase() === normalizedFilter,\n    );\n\n    if (!name || !number) {\n      alert('Введите правильное имя и телефон');\n      return;\n    }\n\n    if (msg) {\n      alert('Taкое имя уже есть');\n      return;\n    } else {\n      this.props.onAddContact(this.state);\n    }\n  };\n\n  handleNameChange = evt => {\n    const { name, value } = evt.target;\n    this.setState({\n      [name]: value,\n    });\n    // console.log(name);\n    // console.log(value);\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label className={s.label}>\n          Name\n          <input\n            className={s.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            placeholder=\"Enter contact name\"\n            onChange={this.handleNameChange}\n          ></input>\n        </label>\n        <label className={s.label}>\n          Number\n          <input\n            className={s.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            placeholder=\"Enter contact number\"\n            onChange={this.handleNameChange}\n          ></input>\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n  contacts: PropTypes.array.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"string\"\n        name=\"filter\"\n        placeholder=\"Enter contact name to find\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nexport default function ContactList({ onClick, onGetVisibleContacts }) {\n  const filteredContacts = onGetVisibleContacts();\n  return (\n    <ul>\n      {filteredContacts &&\n        filteredContacts.map((filteredContact, index) => (\n          <li key={filteredContact.id}>\n            <p>\n              {filteredContact.name} {filteredContact.number}\n            </p>\n            <button\n              type=\"button\"\n              id={filteredContact.id}\n              onClick={onClick}\n              className={s.button}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onGetVisibleContacts: PropTypes.func.isRequired,\n};\n","// const { Component } = require('react');\nimport { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport s from './App.module.css';\nimport ContactForm from './ContactForm/ContactForm';\nimport Filter from './Filter/Filter';\nimport ContactList from './ContactList/ContactList';\n// import { string } from 'prop-types';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    console.log('Component did mount');\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    console.log(contacts);\n    console.log(parsedContacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('Component did update');\n    if (this.state.contacts !== prevState.contact) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  onAddContact = ({ name, number }) => {\n    const { contacts } = this.state;\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, { id: uuidv4(), name, number }],\n      };\n    });\n    console.log(contacts);\n  };\n\n  onFilter = evt => {\n    const { name, value } = evt.target;\n    this.setState({\n      [name]: value,\n    });\n    console.log(this.state.filter);\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  deleteContact = evt => {\n    console.log(evt.target.id);\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(\n        contact => contact.id !== evt.target.id,\n      ),\n    }));\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    // const filteredContacts = this.getVisibleContacts();\n    // console.log(filteredContacts);\n    return (\n      <div className={s.container}>\n        <h1>Phonebook</h1>\n        <ContactForm contacts={contacts} onAddContact={this.onAddContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.onFilter} />\n        <ContactList\n          onClick={this.deleteContact}\n          onGetVisibleContacts={this.getVisibleContacts}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}